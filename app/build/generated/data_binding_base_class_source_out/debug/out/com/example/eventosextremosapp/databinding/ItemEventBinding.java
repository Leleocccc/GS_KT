// Generated by view binder compiler. Do not edit!
package com.example.eventosextremosapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.eventosextremosapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemEventBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button btnDelete;

  @NonNull
  public final TextView tvAffectedPeople;

  @NonNull
  public final TextView tvAffectedPeopleLabel;

  @NonNull
  public final TextView tvEventDate;

  @NonNull
  public final TextView tvEventType;

  @NonNull
  public final TextView tvImpactLevel;

  @NonNull
  public final TextView tvLocalName;

  private ItemEventBinding(@NonNull CardView rootView, @NonNull Button btnDelete,
      @NonNull TextView tvAffectedPeople, @NonNull TextView tvAffectedPeopleLabel,
      @NonNull TextView tvEventDate, @NonNull TextView tvEventType, @NonNull TextView tvImpactLevel,
      @NonNull TextView tvLocalName) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.tvAffectedPeople = tvAffectedPeople;
    this.tvAffectedPeopleLabel = tvAffectedPeopleLabel;
    this.tvEventDate = tvEventDate;
    this.tvEventType = tvEventType;
    this.tvImpactLevel = tvImpactLevel;
    this.tvLocalName = tvLocalName;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemEventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_event, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemEventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDelete;
      Button btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.tvAffectedPeople;
      TextView tvAffectedPeople = ViewBindings.findChildViewById(rootView, id);
      if (tvAffectedPeople == null) {
        break missingId;
      }

      id = R.id.tvAffectedPeopleLabel;
      TextView tvAffectedPeopleLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvAffectedPeopleLabel == null) {
        break missingId;
      }

      id = R.id.tvEventDate;
      TextView tvEventDate = ViewBindings.findChildViewById(rootView, id);
      if (tvEventDate == null) {
        break missingId;
      }

      id = R.id.tvEventType;
      TextView tvEventType = ViewBindings.findChildViewById(rootView, id);
      if (tvEventType == null) {
        break missingId;
      }

      id = R.id.tvImpactLevel;
      TextView tvImpactLevel = ViewBindings.findChildViewById(rootView, id);
      if (tvImpactLevel == null) {
        break missingId;
      }

      id = R.id.tvLocalName;
      TextView tvLocalName = ViewBindings.findChildViewById(rootView, id);
      if (tvLocalName == null) {
        break missingId;
      }

      return new ItemEventBinding((CardView) rootView, btnDelete, tvAffectedPeople,
          tvAffectedPeopleLabel, tvEventDate, tvEventType, tvImpactLevel, tvLocalName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
